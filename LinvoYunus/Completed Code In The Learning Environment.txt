#Name: Linvo Yunus

#1_Biodiversity Project

import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')

print species

#2_Inspected the data frame

species_count = species.scientific_name.nunique()
print species_count
species_type = species.category.unique()
print species_type
conservation_statuses = species.conservation_status.unique()

#3_Analyze Species Conservation Status

conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()

print conservation_counts

#4_Analyze Conservation Status II

species.fillna('No Intervention', inplace=True)
conservation_counts_fixed=species.groupby('conservation_status').scientific_name.nunique().reset_index()

species.fillna('No Intervention', inplace=True)
conservation_counts_fixed=species.groupby('conservation_status').scientific_name.nunique().reset_index()

#5_Plotting Conservation Status by Species

protection_counts =species.groupby('conservation_status').scientific_name.nunique().reset_index().sort_values(by='scientific_name')
    
plt.figure(figsize=(10, 4))
ax = plt.subplot()
plt.bar(range(len(protection_counts)),protection_counts.scientific_name.values)
ax.set_xticks(range(len(protection_counts)))
ax.set_xticklabels(protection_counts.conservation_status.values)
plt.ylabel('Number of Species')
plt.title('Conservation Status by Species')
plt.show()


#6_Investigating Endangered Species

species['is_protected'] = species.conservation_status != 'No Intervention'

category_counts = species.groupby(['category', 'is_protected']).scientific_name.nunique().reset_index()

category_pivot = category_counts.pivot(columns='is_protected', index='category',values='scientific_name') .reset_index()
  
category_pivot.columns = ['category', 'not_protected', 'protected']

category_pivot['percent_protected'] = category_pivot.protected (category_pivot.protected + category_pivot.not_protected)

print category_pivot


#7_Investigating Endangered Species II

category_pivot.columns = ['category', 'not_protected', 'protected']

category_pivot['percent_protected'] = category_pivot.protected (category_pivot.protected + category_pivot.not_protected)

print category_pivot


#8_Chi-Squared Test for Significance

from scipy.stats import chi2_contingency

contingency = [[30, 146],[75, 413]]

pval = chi2_contingency(contingency)[1]
print(pval)

contingency_reptile_mammal = [[30, 146],[5, 73]]

pval_reptile_mammal = chi2_contingency(contingency_reptile_mammal)[1]
print(pval_reptile_mammal)


#10_Observations Data Frame

observations = pd.read_csv('observations.csv')
print observations.head()


#11_In Search of Sheep

species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)

species_is_sheep = species[species.is_sheep]
print sheep_is_sheep

sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]
print sheep_species


#12_Merging Sheep and Observation DataFrame

sheep_observations = observations.merge(sheep_species)

print sheep_observations.head()

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()

print obs_by_park


#13_Plotting Sheep Sightings

plt.figure(figsize=(16,4))
ax=plt.subplot()
plt.bar(range(len(park_name)),obs_by_park.observations.values)
ax.set_xticks(range(len(park_name)))
ax.set_xticklabels(obs_by_park.park_name.values)
plt.ylabel('Number of Observations')
plt.title('Observations of Sheep per Week')
plt.show()


#14_Foot and Mouth Reduction Effort Ð Sample Size Determination

baseline=15
minimum_detectable_effect=100*5/15
sample_size_per_variant=510	
yellowstone_weeks_observing=1
bryce_weeks_observing=2



